/*
Михаил Непомнящий - курс по TypeScript

JavaScript
    - Язык программирования
    - Динамическая типизация
    - Многие ошибки обнаруживаются только в процессе запуска
    - Необходимость погружения в код, чтобы разобраться 

TypeScript
    - JavaScript + строгая система типов
    - Статическая типизация
    - Большинство ошибок заметно при написании кода
    - Связь участков приложения описана через типы (+ доступ автоподсказки)

В зависимости от типа переменной набор подсказок будет другой
    - Для переменной типа string будут подсказываться только методы строк и т.д

Начало работы:
    - 1. Инициализация проекта по умолчанию с дефолтными настройками npm init --y
    - 2. Чтобы typescript обрабатывался браузером его нужно компилировать в javascript для этого нужно 
        создать файл ts-config.json чтобы 
    - 3. "start": "tsc --watch", - командаа позволяет компилировать файлы с расширением .ts в js 
        и класть их в папку dist которую мы указали в outDir: 'dist'. Эти файлы мы будем брать из папки src
        Мы это указывали в tsconfig в include: [], exclude: [] - это поле для исключения


Базовая типизация:
    - Примитивы
        Если тип явно выведен, то мы сразу ограничиваем использование методов до методов подходящий под 
            тип переменной

literal - при использовании const
const num = 108 - тип пиременной 108 который мы не можем переопределить

Для const мы пишем тип

unknown - не знаем какое значение храниться, но предпологаем что значение этой переменной мы узнаем позднее
    В дальнейшем в приложении потребуеться уточнить или переопределить чтобы протипизировать переменную

Если мы хотим сначало объявить переменную, а потом присвоить ей значение нужно будет явно указать тип







*/
