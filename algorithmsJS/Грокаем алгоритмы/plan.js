/*
План изучения алгоритмов
    1. Теоретическая подготовка
    2. Практическая реализация базового алгоритма
    3. Оценка сложности агоритма: Время и Память

1. Структуры данных (Стопка с книгами)
    - Стек
        Следует принципу LIFO(Last in First Out - последним вошел, первым вышел)

        Методы стека:
            - push: добавить элемент
            - pop: удалить верхний элемент, вернуть его
            - peek: вернуть верхний элемент
            - length: вернуть кол-во элементов в стеке

        Пример: Стопка кник. Нужно взять самую нижнюю. Чтобы ее взять нужно сначло взять верхнюю. 
            Потом следующую. Пока не дойдем до самой нижней

    - Очередь (Очередь куда-то. Первый в ней всегда будет первым)
        Напоминает стек. Следует принципу FIFO(первым вошел, первым вышел)

        Методы очереди:
            - enqueue: войти в очередь, добавить элемент в конец
            - dequeue: покинуть очередь, удалить первый элемент и вернуть его
            - front: получить первый элемент
            - isEmpty: проверить, пуста ли очередь
            - size: получить кол-во элементов в очереди



    - Связный список
    - Коллекция
    - Хеш-таблица
    - Дерево
    - Нагруженное(префиксное) дерево
    - Граф





*/

const getSomeData = (str, num) => {
    
}

getSomeData('яблоко, слон, дуб, лес', 13)